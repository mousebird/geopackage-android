apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'signing'

group = "mil.nga.geopackage"
archivesBaseName = "geopackage-android"
version = "1.4.1"
def remotePublish = false

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 25

        testApplicationId 'mil.nga.geopackage.test'
        testInstrumentationRunner "android.test.InstrumentationTestRunner"
    }

    configurations {
        javadocDeps
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java', '../third-party/ormlite-android/src/main/java']
            res.srcDirs = ['src/main/res']
        }

        lintOptions {
            abortOnError false
        }
    }

    task javadoc(type: Javadoc) {
        title = "$archivesBaseName $version API"
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
        classpath += configurations.javadocDeps
        classpath += files("${android.sdkDirectory}/extras/android/support/v13/android-support-v13.jar")
        options.links("http://ngageoint.github.io/geopackage-core-java/docs/api/");
        options.links("http://ngageoint.github.io/geopackage-wkb-java/docs/api/");
        options.links("http://ngageoint.github.io/geopackage-tiff-java/docs/api/");
        options.links("http://ormlite.com/javadoc/ormlite-core/");
        options.links("http://docs.oracle.com/javase/7/docs/api/");
        options.links("http://hjg.com.ar/pngj/apidocs/");
        options.linksOffline("http://d.android.com/reference","${android.sdkDirectory}/docs/reference");
        destinationDir = file("../javadoc/")
        failOnError false
    }

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.java.srcDirs
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    signing {
        required {remotePublish}
        sign configurations.archives
    }

    uploadArchives {
        repositories {
            mavenDeployer {

                if (!remotePublish) {

                    repository url: 'file://' + new File(System.getProperty('user.home'), '.m2/repository')

                } else {

                    beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                    repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                        authentication(userName: ossrhUsername, password: ossrhPassword)
                    }

                    snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                        authentication(userName: ossrhUsername, password: ossrhPassword)
                    }

                    pom.project {
                        name 'GeoPackage Android'
                        packaging 'aar'
                        description 'GeoPackage Android implementation'
                        url 'https://github.com/ngageoint/geopackage-android'

                        scm {
                            url 'git@github.com:ngageoint/geopackage-android.git'
                            connection 'scm:git:git@github.com:ngageoint/geopackage-android.git'
                            developerConnection 'scm:git:git@github.com:ngageoint/geopackage-android.git'
                        }

                        licenses {
                            license {
                                name 'The MIT License (MIT)'
                                url 'https://github.com/ngageoint/geopackage-android/blob/master/LICENSE.txt'
                                distribution 'repo'
                            }
                        }

                        organization {
                            name 'National Geospatial-Intelligence Agency'
                            url 'https://www.nga.mil'
                        }

                        developers {
                            developer {
                                id 'bosborn'
                                name 'Brian Osborn'
                                email 'osbornb@bit-sys.com'
                                organizationUrl 'https://www.bit-sys.com'
                                roles {
                                    role 'developer'
                                }
                                timezone 'UTC-07'
                            }
                        }
                    }
                }
            }
        }
    }

}

allprojects {
   repositories {
      jcenter()
      flatDir {
        dirs 'libs'
      }
   }
}

dependencies {
    compile 'com.android.support:support-v13:25.2.0'
    compile 'mil.nga.geopackage:geopackage-core:1.3.0'
    compile(name: 'sqlite-android-3190300', ext: 'aar')
    compile 'ar.com.hjg:pngj:2.1.0'
    compile 'mil.nga:tiff:1.0.3'
    javadocDeps 'mil.nga.geopackage:geopackage-core:1.3.0' ,
            'ar.com.hjg:pngj:2.1.0' ,
            'mil.nga:tiff:1.0.3'
}
